{"version":3,"sources":["components/Login.js","components/Main.js","App.js","index.js"],"names":["Login","_Component","_inherits","_super","_createSuper","props","_this","_classCallCheck","call","state","username","password","handleSubmit","bind","_assertThisInitialized","handleChange","_createClass","key","value","_this2","_this$state","this","axios","post","concat","process","REACT_APP_API_URL","withCredentials","then","res","localStorage","setItem","data","handleStatus","catch","err","setState","response","status","alert","e","_defineProperty","target","name","_jsx","className","children","_jsxs","onSubmit","preventDefault","type","placeholder","onChange","onClick","Component","withRouter","Main","handleLogout","removeItem","changeLoginStatus","App","isLogin","get","headers","getItem","isConnectedToDatabase","console","log","history","push","_this3","_this4","Switch","Route","exact","path","render","Redirect","to","require","config","ReactDOM","BrowserRouter","document","getElementById"],"mappings":"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","file":"static/js/main.4514b03a.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport axios from 'axios';\nimport './Login.css';\n\nclass Login extends Component {\n  state = {\n    username: '',\n    password: ''\n  }\n\n  constructor(props) {\n    super(props);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleSubmit() {\n    const { username, password } = this.state;\n\n    axios\n      .post(\n        `${process.env.REACT_APP_API_URL}/signin`,\n        {\n          username,\n          password\n        },\n        { withCredentials: true }\n      )\n      .then(res => {\n        localStorage.setItem('accessToken', res.data);\n        this.props.handleStatus();\n      })\n      .catch(err => {\n        this.setState({\n          username: '',\n          password: ''\n        });\n        if (err.response.status === 401) {\n          alert('이름과 비밀번호를 정확히 입력해주세요!');\n        }\n      });\n  }\n\n  handleChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"form-container\">\n        <form className=\"form-items\" onSubmit={e => e.preventDefault()}>\n          <div className=\"login\">Login</div>\n          <input\n            type=\"text\"\n            name=\"username\"\n            placeholder=\"이름\"\n            value={this.state.username}\n            onChange={this.handleChange}\n          />\n          <input\n            type=\"password\"\n            name=\"password\"\n            placeholder=\"비밀번호\"\n            value={this.state.password}\n            onChange={this.handleChange}\n          />\n\n          <button type=\"submit\" onClick={this.handleSubmit}>로그인</button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(Login);\n","import React, { Component } from 'react';\nimport './Main.css';\n\nclass Main extends Component {\n  constructor(props) {\n    super(props);\n    this.handleLogout = this.handleLogout.bind(this);\n  }\n\n  handleLogout() {\n    localStorage.removeItem('accessToken');\n    this.props.changeLoginStatus();\n  }\n\n  render() {\n    return (\n      <div className=\"main-container\">\n        <div className=\"session\">토큰을 정상적으로 받았습니다</div>\n        <div className=\"db\">데이터베이스 연결 상태를 확인하세요</div>\n        <button type=\"submit\" onClick={this.handleLogout}>로그아웃</button>\n      </div>\n    );\n  }\n}\n\nexport default Main;\n","import React, { Component } from 'react';\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom';\nimport axios from 'axios';\n\nimport Login from './components/Login';\nimport Main from './components/Main';\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    isLogin: false,\n    status: ''\n\n  }\n\n  constructor(props) {\n    super(props);\n    this.handleStatus = this.handleStatus.bind(this);\n    this.changeLoginStatus = this.changeLoginStatus.bind(this);\n  }\n\n  componentDidMount() {\n    this.handleStatus();\n  }\n\n  handleStatus() {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/status`,\n        {\n          withCredentials: true,\n          headers: {\n            'Authorization': `Bearer ${localStorage.getItem('accessToken')}`\n          }\n        })\n      .then(res => {\n        this.setState({\n          isLogin: res.data.isLogin,\n          status: res.data.isConnectedToDatabase\n        }, () => {\n          console.log('시작');\n          this.props.history.push('/');\n        });\n      })\n      .catch(err => console.log(err));\n  }\n\n  changeLoginStatus() {\n    this.setState({\n      isLogin: false,\n      status: ''\n    }, () => {\n      this.props.history.push('/');\n    });\n  }\n\n  render() {\n    const { isLogin, status } = this.state;\n\n    return (\n      <div className=\"app\">\n        <div className=\"container\">\n          {isLogin\n            ? <div className=\"success\">로그인에 성공했습니다</div>\n            : <div className=\"status\">이름에는 김코딩,비밀번호에는 1234만 입력 가능합니다</div>\n          }\n          {isLogin\n            ? (status\n              ? (<div className=\"success\">데이터베이스 연결에 성공했습니다</div>)\n              : (<div className=\"fail\">하지만, 데이터베이스 연결이 필요합니다</div>))\n            : ''\n          }\n          <Switch>\n            <Route\n              exact\n              path='/main'\n              render={() => <Main changeLoginStatus={this.changeLoginStatus} />} />\n            <Route\n              exact\n              path='/login'\n              render={() => <Login handleStatus={this.handleStatus} />} />\n            <Route\n              path='/'\n              render={() => {\n                if (isLogin) {\n                  return <Redirect to='/main' />;\n                }\n                return <Redirect to='/login' />;\n              }}\n            />\n          </Switch>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\nrequire('dotenv').config();\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}